function [detJ, Na, dNa_dx, dNa_dy, dNa_dz] = QuadShape(ElementType, localCoord, xi)
% [Na, Be, je] = QuadShape(ElementType, ProblemType, localCoord, xi)
% Inputs:
%   ElementType = 'P12D' or 'Q12D'
%   localCoord: nDim * nNodesElement
%   xi: nDim * nQuad
% Outputs:
%   detJ: 1 * nQuad
%   Na, dNa_dx, dNa_dy, dNa_dz: nNodesElement * nQuad
% Intermediates:
%   dNa_dxi, dNa_deta, dNa_dzeta: nNodesElement * nQuad
nDim = size(localCoord, 1);
nQuad = size(xi, 2);
nNodesElement = size(localCoord, 2);
switch ElementType
    case 'P11D'
        Na = [(1-xi)/2; (1+xi)/2];
        dNa_dxi = repmat([-1/2; 1/2], 1, length(xi));
    case 'P12D'
        Na = [xi(1,:); xi(2,:); 1-xi(1,:)-xi(2,:)];
        dNa_dxi = repmat([1; 0; -1], 1, size(xi,2));
        dNa_deta = repmat([0; 1; -1], 1, size(xi,2));
   case 'P22D'
        Na = [xi(1,:).*(2*xi(1,:)-1);...
              xi(2,:).*(2*xi(2,:)-1);...
             (1-xi(1,:)-xi(2,:)).*(1-2*xi(1,:)-2*xi(2,:));...
              4*xi(1,:).*xi(2,:);...
              4*xi(2,:).*(1-xi(1,:)-xi(2,:));...
              4*xi(1,:).*(1-xi(1,:)-xi(2,:))];
        dNa_dxi = [4*xi(1,:)-1; ...
            zeros(1,size(xi,2)); ...
            4*(xi(1,:)+xi(2,:))-3; ...
            4*xi(2,:); ...
            -4*xi(2,:); ...
            4*(1-2*xi(1,:)-xi(2,:))];
      dNa_deta = [zeros(1,size(xi,2)); ...
            4*xi(2,:)-1; ...
            4*(xi(1,:)+xi(2,:))-3; ...
            4*xi(1,:); ...
            4*(1-xi(1,:)-2*xi(2,:)); ...
            -4*xi(1,:)];  
    case 'Q12D'
        Na = [(1-xi(1,:)).*(1-xi(2,:))/4; ...
            (1+xi(1,:)).*(1-xi(2,:))/4; ...
            (1+xi(1,:)).*(1+xi(2,:))/4; ...
            (1-xi(1,:)).*(1+xi(2,:))/4];
        dNa_dxi = [-(1-xi(2,:))/4; ...
            (1-xi(2,:))/4; ...
            (1+xi(2,:))/4; ...
            -(1+xi(2,:))/4];
        dNa_deta = [-(1-xi(1,:))/4; ...
            -(1+xi(1,:))/4; ...
            (1+xi(1,:))/4; ...
            (1-xi(1,:))/4];
    case 'P13D'
        Na = [xi(1,:); xi(2,:); xi(3,:); 1-xi(1,:)-xi(2,:)-xi(3,:)];
        dNa_dxi = repmat([1; 0; 0; -1], 1, size(xi,2));
        dNa_deta = repmat([0; 1; 0; -1], 1, size(xi,2));
        dNa_dzeta = repmat([0; 0; 1; -1], 1, size(xi,2));
    case 'Q13D'
        Na = [(1-xi(1,:)).*(1-xi(2,:)).*(1-xi(3,:))/8; ...
            (1+xi(1,:)).*(1-xi(2,:)).*(1-xi(3,:))/8; ...
            (1+xi(1,:)).*(1+xi(2,:)).*(1-xi(3,:))/8; ...
            (1-xi(1,:)).*(1+xi(2,:)).*(1-xi(3,:))/8; ...
            (1-xi(1,:)).*(1-xi(2,:)).*(1+xi(3,:))/8; ...
            (1+xi(1,:)).*(1-xi(2,:)).*(1+xi(3,:))/8; ...
            (1+xi(1,:)).*(1+xi(2,:)).*(1+xi(3,:))/8; ...
            (1-xi(1,:)).*(1+xi(2,:)).*(1+xi(3,:))/8];
        dNa_dxi = [-(1-xi(2,:)).*(1-xi(3,:))/8; ...
            (1-xi(2,:)).*(1-xi(3,:))/8; ...
            (1+xi(2,:)).*(1-xi(3,:))/8; ...
            -(1+xi(2,:)).*(1-xi(3,:))/8; ...
            -(1-xi(2,:)).*(1+xi(3,:))/8; ...
            (1-xi(2,:)).*(1+xi(3,:))/8; ...   
            (1+xi(2,:)).*(1+xi(3,:))/8; ...
            -(1+xi(2,:)).*(1+xi(3,:))/8];
        dNa_deta = [-(1-xi(1,:)).*(1-xi(3,:))/8; ...
            -(1+xi(1,:)).*(1-xi(3,:))/8; ...
            (1+xi(1,:)).*(1-xi(3,:))/8; ...
            (1-xi(1,:)).*(1-xi(3,:))/8;
            -(1-xi(1,:)).*(1+xi(3,:))/8; ...
            -(1+xi(1,:)).*(1+xi(3,:))/8; ...
            (1+xi(1,:)).*(1+xi(3,:))/8; ...
            (1-xi(1,:)).*(1+xi(3,:))/8;];
        dNa_dzeta = [-(1-xi(1,:)).*(1-xi(2,:))/8; ...
            -(1+xi(1,:)).*(1-xi(2,:))/8; ...
            -(1+xi(1,:)).*(1+xi(2,:))/8; ...
            -(1-xi(1,:)).*(1+xi(2,:))/8; ...
            (1-xi(1,:)).*(1-xi(2,:))/8; ...
            (1+xi(1,:)).*(1-xi(2,:))/8; ...
            (1+xi(1,:)).*(1+xi(2,:))/8; ...
            (1-xi(1,:)).*(1+xi(2,:))/8];
end

switch nDim
    case 1
        detJ = localCoord * dNa_dxi;
        dNa_dx = dNa_dxi./detJ;
    case 2
        detJ = zeros(1,nQuad);
        dNa_dx = zeros(nNodesElement,nQuad);
        dNa_dy = zeros(nNodesElement,nQuad);
        for iQuad = 1:nQuad
            %localCoord
            J = localCoord * [dNa_dxi(:,iQuad), dNa_deta(:,iQuad)];
            
            detJ(iQuad) = det(J);
%             J=J+[0.000000001,0;0,0.000000001];
            grad_Na = J'\[dNa_dxi(:,iQuad)'; dNa_deta(:,iQuad)'];
            dNa_dx(:,iQuad) = grad_Na(1,:);
            dNa_dy(:,iQuad) = grad_Na(2,:);
        end
    case 3
        detJ = zeros(1,nQuad);
        dNa_dx = zeros(nNodesElement,nQuad);
        dNa_dy = zeros(nNodesElement,nQuad);
        dNa_dz = zeros(nNodesElement,nQuad);
        for iQuad = 1:nQuad
            J = localCoord * [dNa_dxi(:,iQuad), dNa_deta(:,iQuad), ...
                dNa_dzeta(:,iQuad)];
            detJ(iQuad) = det(J);
            grad_Na = J'\[dNa_dxi(:,iQuad)'; dNa_deta(:,iQuad)'; ...
                dNa_dzeta(:,iQuad)'];
            dNa_dx(:,iQuad) = grad_Na(1,:)';
            dNa_dy(:,iQuad) = grad_Na(2,:)';
            dNa_dz(:,iQuad) = grad_Na(3,:)';
        end
end